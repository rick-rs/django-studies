version: '3.9'

services:
  db:
    image: postgres
    restart: always
    ports: 
      - "5432:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      HOST: "${HOST}"
    networks:
      - public
    volumes:
      - ./dump:/var/lib/postgresql/data
    
  django:
    build: .
    restart: always
    volumes:
      - .:/code
    env_file:
      - .env
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      HOST: "${HOST}"
      PGADMIN_DEFAULT_EMAIL: "${ADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${POSTGRES_PASSWORD}"
    command: python3 manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    networks:
      - public
    depends_on:
      - db
      - db-admin
    
  db-admin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "${ADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${POSTGRES_PASSWORD}"
    ports:
      - 8080:80
    depends_on:
      - db
    networks:
      - public

networks:
  public:

# dpage/pgadmin4
# - Em Host name/address informar o nome do container que corresponde à instância do PostgreSQL
# - Port = porta default de acesso ao container e disponível a partir da rede
# - Username = POSTGRES_USER, bem como a senha correspondente em Password (Postgres2019!).